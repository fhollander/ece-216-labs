Name: Forest Davis-Hollander, Chunliang Tao, Wade Bennett, Micaela Holmes
Email:fdavisho@u.rochester.edu, ctao4@u.rochester.edu, wbennet2@u.rochester.edu, mholm16@u.rochester.edu
Date: 10 December 2019

We affirm that we have not given or received any unauthorized help on this assignment, and that this work is our own.

This code is used for all of the PIC32 actions within the final project. A UART interrupt was created to receive the gamepad signals from the Pi. Additional C coding was implemented to read from change notification pins on the PIC32 that were wired directly to the motor encoders. This allowed for the current motor angle to be read and to be adjusted using two separate PI controllers. A separate timer ISR simply updates the motors, telling them to continuously drive forward, or stop if a neutral position indicator is received from the Pi. Additional coding was used to control the direction pins on the motors (simply changing their output from 0 to 1). The program also changes the value of a servo motor by sending a series of hex characters to a servo motor controller via UART. This code allows for 5 different servo motor positions from -45 to 45 degrees.

For wiring to the servo motor, we setup up the Micro Maestro 6-Channel USB Servo Controller with the following connections: The very top row of pins (servo power) + and - on the controller were wired to a power supply of +6V, with the + to the positive lead of the power supply and the - to the negative lead of the power supply. On the channel number 0, the wires for the servo motor were attached to the three pins of the controller. The orange wire of the servo was attached to the signal pin of the controller, while the red wire was attached to the + pin and the maroon lead was connected to the - pin. Additionally, the GND pin on the controller was connected to ground on the PIC, and the VIN was connected to 5V on the PIC. The controller RX pin was connected to pin 50 on the PIC, and the RST' pin was connected to 3.3V on the PIC.
Note that for the power supply from 9V battery power, we used 4 15ohm resistors and 1 10ohm resistor all in paralell as a voltage divider in between the battery and the servo motor. This gave a resistance of 2.7272ohms, allowing for about 1.1A to be supplied to the servo from the 9V battery, given that the servo can only run at 6V (so the resistors dissipate the remaining 3V).

We connected pins 12 and 14 to yellow and white lines on the gearmotor 1 encoder and pins 83 and 84 to yellow and white lines on the gearmotor 2 encoder. Green lines on both encoders are connected to GND and blue lines on both encoders are connected to +5V. M1OUT2 and M2OUT2 were connected to motor power (red) and M1OUT1 and M2OUT1 were connected to motor power (black). Pins 25, 24 were connected to M1IN1, M1IN2 for motor 1 and pins 21, 20 were connected to M2IN1, M2IN2 for motor 2. PWMs were used for both motors with pin 72 connected to PWM M1D1 and pin 78 connected to PWM M2D1. All other connections with the H-bridge motor driver circuit were connected per the instructions in lab 5.